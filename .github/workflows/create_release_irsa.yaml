name: Create Release for IRSA
on:
  push:
    tags:
    - v*

jobs:
  debug_info:
    name: Debug info
    runs-on: ubuntu-20.04
    steps:
      - name: Print github context JSON
        run: |
          cat <<EOF
          ${{ toJson(github) }}
          EOF
  create_release:
    name: Create IRSA release
    runs-on: ubuntu-20.04
    if: ${{ github.event.created }}
    outputs:
      upload_url: ${{ steps.create_gh_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.ref }}
      - name: Get Version
        id: get_version
        run: |
          version="${{ github.event.ref }}"
          version="v${version#/refs/tags/}"
          echo "version=\"$version\""
          echo "::set-output name=version::${version}"
      - name: Update chart values
        run: |
          file="./helm/kiam-app/values.yaml"
          sed -i "s|# whiteListRouteRegexp: disabled by default|whiteListRouteRegexp: /latest/meta-data/placement/availability-zone|" ${file}

          git config --local user.name "github-actions"
          git add ${file}
          git commit -m "Updated default values for IRSA"
      - name: Create tag
        run: |
          git config --local user.name "github-actions"

          release_branch="release-${{ steps.get_version.outputs.version }}-irsa"
          echo "release_branch=$release_branch"

          if git rev-parse --verify $release_branch ; then
            echo "Release branch $release_branch already exists. Nothing to do here."
            exit 0
          fi

          git branch $release_branch HEAD^
          git push origin $release_branch
          git tag ${{ steps.get_version.outputs.version }} ${{ github.sha }}
      - name: Push tag
        env:
          REMOTE_REPO: "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
        run: |
          git push "${REMOTE_REPO}" --tags
      - name: Create release
        id: create_gh_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ steps.get_version.outputs.version }}"
          release_name: "${{ steps.get_version.outputs.version }}"
