apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.agent.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "labels.agent" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "labels.selector.agent" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "labels.agent" . | nindent 8 }}
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: {{ .Values.agent.name }}
      nodeSelector:
        kubernetes.io/role: worker
      tolerations:
        # Make sure kiam agent gets scheduled on all worker nodes. Ignoring all taints.
        - effect: NoSchedule
          operator: Exists
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      volumes:
        - name: tls
          secret:
            secretName: {{ .Values.agent.tlsSecret }}
        - name: xtables
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
      priorityClassName: giantswarm-critical
      containers:
        - name: {{ .Values.agent.name }}
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
          image: "{{ .Values.global.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /kiam
            - agent
          args:
            - --iptables
            - --host-interface={{ .Values.agent.host.interface }}
            - --json-log
            - --level={{ .Values.agent.log.level }}
            - --port={{ .Values.agent.host.port }}
            - --cert=/etc/kiam/tls/{{ .Values.agent.tlsCerts.certFileName }}
            - --key=/etc/kiam/tls/{{ .Values.agent.tlsCerts.keyFileName }}
            - --ca=/etc/kiam/tls/{{ .Values.agent.tlsCerts.caFileName }}
            - --server-address={{ .Values.server.name }}:{{ .Values.server.service.port }}
            {{- if .Values.agent.whiteListRouteRegexp }}
            - --whitelist-route-regexp={{ .Values.agent.whiteListRouteRegexp }}
            {{- end }}
            {{- if .Values.agent.prometheus.scrape }}
            - --prometheus-listen-addr=0.0.0.0:{{ .Values.agent.prometheus.port }}
            - --prometheus-sync-interval={{ .Values.agent.prometheus.syncInterval }}
            {{- end }}
            - --gateway-timeout-creation={{ .Values.agent.gatewayTimeoutCreation }}
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - mountPath: /etc/kiam/tls
              name: tls
            - mountPath: /var/run/xtables.lock
              name: xtables
          livenessProbe:
            httpGet:
              ## deep liveness probe will fail if the agent is not
              ## able to communicate with servers, which may happen on
              ## certificate change
              ## source https://github.com/uswitch/kiam/blob/master/helm/kiam/values.yaml#L32-L35
              path: /health?deep=1
              port: {{ .Values.agent.host.port }}
            initialDelaySeconds: 3
            periodSeconds: 3
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold:  3
          resources:
{{ toYaml .Values.agent.resources | indent 12 }}
